{"ast":null,"code":"import React,{useState}from\"react\";import ReCAPTCHA from\"react-google-recaptcha\";import'../css/Contact.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ContactForm=()=>{const[captchaVerified,setCaptchaVerified]=useState(false);const[formData,setFormData]=useState({name:\"\",email:\"\",message:\"\"});const[formSubmitted,setFormSubmitted]=useState(false);const[errorMessage,setErrorMessage]=useState(\"\");const handleCaptcha=value=>{setCaptchaVerified(!!value);};const handleChange=e=>{setFormData({...formData,[e.target.name]:e.target.value});};const handleSubmit=async e=>{e.preventDefault();if(!captchaVerified){alert(\"Please complete the CAPTCHA before submitting.\");return;}try{const response=await fetch('http://localhost:9000/api/contact',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(formData)});const data=await response.json();if(response.ok){setFormData({name:\"\",email:\"\",message:\"\"});setFormSubmitted(true);setErrorMessage(\"\");// Clear any previous errors\n}else{setErrorMessage(data.error||'An error occurred. Please try again.');}}catch(error){setErrorMessage('Failed to send message. Please try again later.');}};return/*#__PURE__*/_jsx(\"div\",{className:\"contact-form-container\",children:formSubmitted?/*#__PURE__*/_jsx(\"p\",{className:\"success-message\",children:\"Thank you for reaching out! I'll get back to you soon.\"}):/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"contact-form\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"name\",placeholder:\"Your Name\",onChange:handleChange,value:formData.name,required:true,className:\"contact-input\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"email\",placeholder:\"Your Email\",onChange:handleChange,value:formData.email,required:true,className:\"contact-input\"}),/*#__PURE__*/_jsx(\"textarea\",{name:\"message\",placeholder:\"Your Message\",onChange:handleChange,value:formData.message,required:true,className:\"contact-input\"}),errorMessage&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:errorMessage}),/*#__PURE__*/_jsxs(\"div\",{className:\"send-area\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"captcha-container\",children:/*#__PURE__*/_jsx(ReCAPTCHA,{sitekey:\"6Lc_6uwqAAAAAGOUlQIsU6OwTdCen_7Kh2UZI-no\",onChange:handleCaptcha})}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:!captchaVerified,className:\"contact-button\",children:\"Send Message\"})]})]})});};export default ContactForm;","map":{"version":3,"names":["React","useState","ReCAPTCHA","jsx","_jsx","jsxs","_jsxs","ContactForm","captchaVerified","setCaptchaVerified","formData","setFormData","name","email","message","formSubmitted","setFormSubmitted","errorMessage","setErrorMessage","handleCaptcha","value","handleChange","e","target","handleSubmit","preventDefault","alert","response","fetch","method","headers","body","JSON","stringify","data","json","ok","error","className","children","onSubmit","type","placeholder","onChange","required","sitekey","disabled"],"sources":["/Users/kaylenrivers/personal-site/frontend/src/components/ContactForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport '../css/Contact.css';\n\nconst ContactForm = () => {\n  const [captchaVerified, setCaptchaVerified] = useState(false);\n  const [formData, setFormData] = useState({ name: \"\", email: \"\", message: \"\" });\n  const [formSubmitted, setFormSubmitted] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const handleCaptcha = (value) => {\n    setCaptchaVerified(!!value);\n  };\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!captchaVerified) {\n      alert(\"Please complete the CAPTCHA before submitting.\");\n      return;\n    }\n \n    try {\n      const response = await fetch('http://localhost:9000/api/contact', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(formData),\n      });\n \n      const data = await response.json();\n \n      if (response.ok) {\n        setFormData({ name: \"\", email: \"\", message: \"\" });\n        setFormSubmitted(true);\n        setErrorMessage(\"\"); // Clear any previous errors\n      } else {\n        setErrorMessage(data.error || 'An error occurred. Please try again.');\n      }\n    } catch (error) {\n      setErrorMessage('Failed to send message. Please try again later.');\n    }\n  };\n\n  return (\n    <div className=\"contact-form-container\">\n      {formSubmitted ? (\n        <p className=\"success-message\">Thank you for reaching out! I'll get back to you soon.</p>\n      ) : (\n        <form onSubmit={handleSubmit} className=\"contact-form\">\n          <input \n            type=\"text\" \n            name=\"name\" \n            placeholder=\"Your Name\" \n            onChange={handleChange} \n            value={formData.name}\n            required \n            className=\"contact-input\"\n          />\n          <input \n            type=\"email\" \n            name=\"email\" \n            placeholder=\"Your Email\" \n            onChange={handleChange} \n            value={formData.email}\n            required \n            className=\"contact-input\"\n          />\n          <textarea \n            name=\"message\" \n            placeholder=\"Your Message\" \n            onChange={handleChange} \n            value={formData.message}\n            required \n            className=\"contact-input\"\n          />\n          \n          {/* Show error message if any */}\n          {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n\n          {/* Google reCAPTCHA */}\n          <div className=\"send-area\">\n            <div className=\"captcha-container\">\n              <ReCAPTCHA sitekey=\"6Lc_6uwqAAAAAGOUlQIsU6OwTdCen_7Kh2UZI-no\" onChange={handleCaptcha} />\n            </div>\n    \n            <button type=\"submit\" disabled={!captchaVerified} className=\"contact-button\">Send Message</button>\n          </div>\n        </form>\n      )}\n    </div>\n  );\n};\n\nexport default ContactForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}